{"version":3,"sources":["useInfoLabel.ts"],"sourcesContent":["import * as React from 'react';\n\nimport { Label } from '@fluentui/react-label';\nimport { resolveShorthand, useId } from '@fluentui/react-utilities';\nimport { InfoButton } from '../InfoButton/InfoButton';\nimport type { InfoLabelProps, InfoLabelState } from './InfoLabel.types';\n\n/**\n * Create the state required to render InfoLabel.\n *\n * The returned state can be modified with hooks such as useInfoLabelStyles_unstable,\n * before being passed to renderInfoLabel_unstable.\n *\n * @param props - props from this instance of InfoLabel\n * @param ref - reference to label element of InfoLabel\n */\nexport const useInfoLabel_unstable = (props: InfoLabelProps, ref: React.Ref<HTMLLabelElement>): InfoLabelState => {\n  const {\n    root: rootShorthand,\n    label: labelShorthand,\n    infoButton: infoButtonShorthand,\n    info,\n    size,\n    className,\n    style,\n    ...labelProps\n  } = props;\n  const baseId = useId('infolabel-');\n\n  const root = resolveShorthand(rootShorthand, {\n    required: true,\n    defaultProps: {\n      className,\n      style,\n    },\n  });\n\n  const label = resolveShorthand(labelShorthand, {\n    required: true,\n    defaultProps: {\n      id: baseId + '__label',\n      ref,\n      size,\n      ...labelProps,\n    },\n  });\n\n  const infoButton = resolveShorthand(infoButtonShorthand, {\n    required: !!info,\n    defaultProps: {\n      id: baseId + '__infoButton',\n      size,\n      info,\n    },\n  });\n\n  if (infoButton) {\n    infoButton.info = resolveShorthand(infoButton?.info, {\n      defaultProps: {\n        id: baseId + '__info',\n      },\n    });\n\n    infoButton['aria-labelledby'] ??= `${label.id} ${infoButton.id}`;\n    root['aria-owns'] ??= infoButton.info?.id;\n  }\n\n  return {\n    size,\n    components: {\n      root: 'span',\n      label: Label,\n      infoButton: InfoButton,\n    },\n    root,\n    label,\n    infoButton,\n  };\n};\n"],"names":["infoButton","root","React","Label","resolveShorthand","useId","InfoButton","useInfoLabel_unstable","props","ref","rootShorthand","label","labelShorthand","infoButtonShorthand","info","size","className","style","labelProps","baseId","required","defaultProps","id","components"],"mappings":"IA+DIA,aAAW,iBACXC,OAAK;AAhET,YAAYC,WAAW,QAAQ;AAE/B,SAASC,KAAK,QAAQ,wBAAwB;AAC9C,SAASC,gBAAgB,EAAEC,KAAK,QAAQ,4BAA4B;AACpE,SAASC,UAAU,QAAQ,2BAA2B;AAGtD;;;;;;;;CAQC,GACD,OAAO,MAAMC,wBAAwB,CAACC,OAAuBC,MAAqD;IAChH,MAAM,EACJR,MAAMS,cAAa,EACnBC,OAAOC,eAAc,EACrBZ,YAAYa,oBAAmB,EAC/BC,KAAI,EACJC,KAAI,EACJC,UAAS,EACTC,MAAK,EACL,GAAGC,YACJ,GAAGV;IACJ,MAAMW,SAASd,MAAM;IAErB,MAAMJ,OAAOG,iBAAiBM,eAAe;QAC3CU,UAAU,IAAI;QACdC,cAAc;YACZL;YACAC;QACF;IACF;IAEA,MAAMN,QAAQP,iBAAiBQ,gBAAgB;QAC7CQ,UAAU,IAAI;QACdC,cAAc;YACZC,IAAIH,SAAS;YACbV;YACAM;YACA,GAAGG,UAAU;QACf;IACF;IAEA,MAAMlB,aAAaI,iBAAiBS,qBAAqB;QACvDO,UAAU,CAAC,CAACN;QACZO,cAAc;YACZC,IAAIH,SAAS;YACbJ;YACAD;QACF;IACF;IAEA,IAAId,YAAY;YAQQA;QAPtBA,WAAWc,IAAI,GAAGV,iBAAiBJ,uBAAAA,wBAAAA,KAAAA,IAAAA,WAAYc,IAAI,EAAE;YACnDO,cAAc;gBACZC,IAAIH,SAAS;YACf;QACF;;QAEAnB,MAAAA,cAAAA,WAAU,CAAC,kBAAA,kBAAkB,iCAA7BA,WAAU,CAAC,gBAAkB,GAAK,CAAC,EAAEW,MAAMW,EAAE,CAAC,CAAC,EAAEtB,WAAWsB,EAAE,CAAC,CAAC;;QAChErB,OAAAA,QAAAA,KAAI,CAAC,YAAA,YAAY,mCAAjBA,KAAI,CAAC,UAAY,GAAKD,CAAAA,mBAAAA,WAAWc,IAAI,cAAfd,8BAAAA,KAAAA,IAAAA,iBAAiBsB,EAAE;IAC3C,CAAC;IAED,OAAO;QACLP;QACAQ,YAAY;YACVtB,MAAM;YACNU,OAAOR;YACPH,YAAYM;QACd;QACAL;QACAU;QACAX;IACF;AACF,EAAE"}