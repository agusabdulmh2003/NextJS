{"version":3,"sources":["useDataGridRow.js"],"sourcesContent":["import * as React from 'react';\nimport { isInteractiveHTMLElement, useEventCallback, resolveShorthand } from '@fluentui/react-utilities';\nimport { Space } from '@fluentui/keyboard-keys';\nimport { useTableRow_unstable } from '../TableRow/useTableRow';\nimport { useDataGridContext_unstable } from '../../contexts/dataGridContext';\nimport { DataGridSelectionCell } from '../DataGridSelectionCell/DataGridSelectionCell';\nimport { useTableRowIdContext } from '../../contexts/rowIdContext';\nimport { useIsInTableHeader } from '../../contexts/tableHeaderContext';\n/**\n * Create the state required to render DataGridRow.\n *\n * The returned state can be modified with hooks such as useDataGridRowStyles_unstable,\n * before being passed to renderDataGridRow_unstable.\n *\n * @param props - props from this instance of DataGridRow\n * @param ref - reference to root HTMLElement of DataGridRow\n */ export const useDataGridRow_unstable = (props, ref)=>{\n    const rowId = useTableRowIdContext();\n    const isHeader = useIsInTableHeader();\n    const columnDefs = useDataGridContext_unstable((ctx)=>ctx.columns);\n    const selectable = useDataGridContext_unstable((ctx)=>ctx.selectableRows);\n    const selected = useDataGridContext_unstable((ctx)=>ctx.selection.isRowSelected(rowId));\n    const tabbable = useDataGridContext_unstable((ctx)=>ctx.focusMode === 'row_unstable');\n    const appearance = useDataGridContext_unstable((ctx)=>{\n        if (!isHeader && selectable && ctx.selection.isRowSelected(rowId)) {\n            return ctx.selectionAppearance;\n        }\n        return 'none';\n    });\n    const toggleRow = useDataGridContext_unstable((ctx)=>ctx.selection.toggleRow);\n    const dataGridContextValue = useDataGridContext_unstable((ctx)=>ctx);\n    const onClick = useEventCallback((e)=>{\n        var _props_onClick;\n        if (selectable && !isHeader) {\n            toggleRow(e, rowId);\n        }\n        (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, e);\n    });\n    const onKeyDown = useEventCallback((e)=>{\n        var _props_onKeyDown;\n        if (selectable && !isHeader && e.key === Space && !isInteractiveHTMLElement(e.target)) {\n            // stop scrolling\n            e.preventDefault();\n            toggleRow(e, rowId);\n        }\n        (_props_onKeyDown = props.onKeyDown) === null || _props_onKeyDown === void 0 ? void 0 : _props_onKeyDown.call(props, e);\n    });\n    const baseState = useTableRow_unstable({\n        appearance,\n        'aria-selected': selectable ? selected : undefined,\n        ...props,\n        onClick,\n        onKeyDown,\n        children: null,\n        as: 'div',\n        tabIndex: tabbable && !isHeader ? 0 : undefined\n    }, ref);\n    return {\n        ...baseState,\n        components: {\n            ...baseState.components,\n            selectionCell: DataGridSelectionCell\n        },\n        selectionCell: resolveShorthand(props.selectionCell, {\n            required: selectable\n        }),\n        renderCell: props.children,\n        columnDefs,\n        dataGridContextValue\n    };\n};\n"],"names":["useDataGridRow_unstable","props","ref","rowId","useTableRowIdContext","isHeader","useIsInTableHeader","columnDefs","useDataGridContext_unstable","ctx","columns","selectable","selectableRows","selected","selection","isRowSelected","tabbable","focusMode","appearance","selectionAppearance","toggleRow","dataGridContextValue","onClick","useEventCallback","e","_props_onClick","call","onKeyDown","_props_onKeyDown","key","Space","isInteractiveHTMLElement","target","preventDefault","baseState","useTableRow_unstable","undefined","children","as","tabIndex","components","selectionCell","DataGridSelectionCell","resolveShorthand","required","renderCell"],"mappings":";;;;+BAgBiBA;;aAAAA;;;6DAhBM;gCACsD;8BACvD;6BACe;iCACO;uCACN;8BACD;oCACF;AASxB,MAAMA,0BAA0B,CAACC,OAAOC,MAAM;IACrD,MAAMC,QAAQC,IAAAA,kCAAoB;IAClC,MAAMC,WAAWC,IAAAA,sCAAkB;IACnC,MAAMC,aAAaC,IAAAA,4CAA2B,EAAC,CAACC,MAAMA,IAAIC,OAAO;IACjE,MAAMC,aAAaH,IAAAA,4CAA2B,EAAC,CAACC,MAAMA,IAAIG,cAAc;IACxE,MAAMC,WAAWL,IAAAA,4CAA2B,EAAC,CAACC,MAAMA,IAAIK,SAAS,CAACC,aAAa,CAACZ;IAChF,MAAMa,WAAWR,IAAAA,4CAA2B,EAAC,CAACC,MAAMA,IAAIQ,SAAS,KAAK;IACtE,MAAMC,aAAaV,IAAAA,4CAA2B,EAAC,CAACC,MAAM;QAClD,IAAI,CAACJ,YAAYM,cAAcF,IAAIK,SAAS,CAACC,aAAa,CAACZ,QAAQ;YAC/D,OAAOM,IAAIU,mBAAmB;QAClC,CAAC;QACD,OAAO;IACX;IACA,MAAMC,YAAYZ,IAAAA,4CAA2B,EAAC,CAACC,MAAMA,IAAIK,SAAS,CAACM,SAAS;IAC5E,MAAMC,uBAAuBb,IAAAA,4CAA2B,EAAC,CAACC,MAAMA;IAChE,MAAMa,UAAUC,IAAAA,gCAAgB,EAAC,CAACC,IAAI;QAClC,IAAIC;QACJ,IAAId,cAAc,CAACN,UAAU;YACzBe,UAAUI,GAAGrB;QACjB,CAAC;QACAsB,CAAAA,iBAAiBxB,MAAMqB,OAAO,AAAD,MAAO,IAAI,IAAIG,mBAAmB,KAAK,IAAI,KAAK,IAAIA,eAAeC,IAAI,CAACzB,OAAOuB,EAAE;IACnH;IACA,MAAMG,YAAYJ,IAAAA,gCAAgB,EAAC,CAACC,IAAI;QACpC,IAAII;QACJ,IAAIjB,cAAc,CAACN,YAAYmB,EAAEK,GAAG,KAAKC,mBAAK,IAAI,CAACC,IAAAA,wCAAwB,EAACP,EAAEQ,MAAM,GAAG;YACnF,iBAAiB;YACjBR,EAAES,cAAc;YAChBb,UAAUI,GAAGrB;QACjB,CAAC;QACAyB,CAAAA,mBAAmB3B,MAAM0B,SAAS,AAAD,MAAO,IAAI,IAAIC,qBAAqB,KAAK,IAAI,KAAK,IAAIA,iBAAiBF,IAAI,CAACzB,OAAOuB,EAAE;IAC3H;IACA,MAAMU,YAAYC,IAAAA,iCAAoB,EAAC;QACnCjB;QACA,iBAAiBP,aAAaE,WAAWuB,SAAS;QAClD,GAAGnC,KAAK;QACRqB;QACAK;QACAU,UAAU,IAAI;QACdC,IAAI;QACJC,UAAUvB,YAAY,CAACX,WAAW,IAAI+B,SAAS;IACnD,GAAGlC;IACH,OAAO;QACH,GAAGgC,SAAS;QACZM,YAAY;YACR,GAAGN,UAAUM,UAAU;YACvBC,eAAeC,4CAAqB;QACxC;QACAD,eAAeE,IAAAA,gCAAgB,EAAC1C,MAAMwC,aAAa,EAAE;YACjDG,UAAUjC;QACd;QACAkC,YAAY5C,MAAMoC,QAAQ;QAC1B9B;QACAc;IACJ;AACJ"}