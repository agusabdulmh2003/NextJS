{"version":3,"sources":["useTableSelection.ts"],"sourcesContent":["import * as React from 'react';\nimport { useControllableState, useEventCallback } from '@fluentui/react-utilities';\nimport { createSelectionManager } from './selectionManager';\nimport type { TableRowId, TableSelectionState, TableFeaturesState, UseTableSelectionOptions } from './types';\n\nconst noop = () => undefined;\n\nexport const defaultTableSelectionState: TableSelectionState = {\n  allRowsSelected: false,\n  clearRows: noop,\n  deselectRow: noop,\n  isRowSelected: () => false,\n  selectRow: noop,\n  selectedRows: new Set(),\n  someRowsSelected: false,\n  toggleAllRows: noop,\n  toggleRow: noop,\n  selectionMode: 'multiselect',\n};\n\nexport function useTableSelection<TItem>(options: UseTableSelectionOptions) {\n  // False positive, these plugin hooks are intended to be run on every render\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return (tableState: TableFeaturesState<TItem>) => useTableSelectionState(tableState, options);\n}\n\nexport function useTableSelectionState<TItem>(\n  tableState: TableFeaturesState<TItem>,\n  options: UseTableSelectionOptions,\n): TableFeaturesState<TItem> {\n  const { items, getRowId } = tableState;\n  const { selectionMode, defaultSelectedItems, selectedItems, onSelectionChange } = options;\n\n  const [selected, setSelected] = useControllableState<Set<TableRowId>>({\n    initialState: new Set(),\n    defaultState: React.useMemo(\n      () => defaultSelectedItems && createSetFromIterable(defaultSelectedItems),\n      [defaultSelectedItems],\n    ),\n    state: React.useMemo(() => selectedItems && createSetFromIterable(selectedItems), [selectedItems]),\n  });\n\n  const selectionManager = React.useMemo(() => {\n    return createSelectionManager(selectionMode, (e, newSelectedItems) => {\n      setSelected(() => {\n        onSelectionChange?.(e as React.SyntheticEvent, { selectedItems: newSelectedItems });\n        return newSelectedItems;\n      });\n    });\n  }, [onSelectionChange, selectionMode, setSelected]);\n\n  const toggleAllRows: TableSelectionState['toggleAllRows'] = useEventCallback(e => {\n    selectionManager.toggleAllItems(\n      e,\n      items.map((item, i) => getRowId?.(item) ?? i),\n      selected,\n    );\n  });\n\n  const toggleRow: TableSelectionState['toggleRow'] = useEventCallback((e, rowId: TableRowId) =>\n    selectionManager.toggleItem(e, rowId, selected),\n  );\n\n  const deselectRow: TableSelectionState['deselectRow'] = useEventCallback((e, rowId: TableRowId) =>\n    selectionManager.deselectItem(e, rowId, selected),\n  );\n\n  const selectRow: TableSelectionState['selectRow'] = useEventCallback((e, rowId: TableRowId) =>\n    selectionManager.selectItem(e, rowId, selected),\n  );\n\n  const isRowSelected: TableSelectionState['isRowSelected'] = (rowId: TableRowId) =>\n    selectionManager.isSelected(rowId, selected);\n\n  return {\n    ...tableState,\n    selection: {\n      selectionMode,\n      someRowsSelected: selected.size > 0,\n      allRowsSelected: selectionMode === 'single' ? selected.size > 0 : selected.size === items.length,\n      selectedRows: selected,\n      toggleRow,\n      toggleAllRows,\n      clearRows: selectionManager.clearItems,\n      deselectRow,\n      selectRow,\n      isRowSelected,\n    },\n  };\n}\n\n/**\n * Creates a set from a given iterable, in case the iterable is a set itself, returns the given set instead.\n */\nfunction createSetFromIterable<V>(iterable: Iterable<V>): Set<V> {\n  return iterable instanceof Set ? iterable : new Set(iterable);\n}\n"],"names":["React","useControllableState","useEventCallback","createSelectionManager","noop","undefined","defaultTableSelectionState","allRowsSelected","clearRows","deselectRow","isRowSelected","selectRow","selectedRows","Set","someRowsSelected","toggleAllRows","toggleRow","selectionMode","useTableSelection","options","tableState","useTableSelectionState","items","getRowId","defaultSelectedItems","selectedItems","onSelectionChange","selected","setSelected","initialState","defaultState","useMemo","createSetFromIterable","state","selectionManager","e","newSelectedItems","toggleAllItems","map","item","i","rowId","toggleItem","deselectItem","selectItem","isSelected","selection","size","length","clearItems","iterable"],"mappings":"AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,oBAAoB,EAAEC,gBAAgB,QAAQ,4BAA4B;AACnF,SAASC,sBAAsB,QAAQ,qBAAqB;AAG5D,MAAMC,OAAO,IAAMC;AAEnB,OAAO,MAAMC,6BAAkD;IAC7DC,iBAAiB,KAAK;IACtBC,WAAWJ;IACXK,aAAaL;IACbM,eAAe,IAAM,KAAK;IAC1BC,WAAWP;IACXQ,cAAc,IAAIC;IAClBC,kBAAkB,KAAK;IACvBC,eAAeX;IACfY,WAAWZ;IACXa,eAAe;AACjB,EAAE;AAEF,OAAO,SAASC,kBAAyBC,OAAiC,EAAE;IAC1E,4EAA4E;IAC5E,sDAAsD;IACtD,OAAO,CAACC,aAA0CC,uBAAuBD,YAAYD;AACvF,CAAC;AAED,OAAO,SAASE,uBACdD,UAAqC,EACrCD,OAAiC,EACN;IAC3B,MAAM,EAAEG,MAAK,EAAEC,SAAQ,EAAE,GAAGH;IAC5B,MAAM,EAAEH,cAAa,EAAEO,qBAAoB,EAAEC,cAAa,EAAEC,kBAAiB,EAAE,GAAGP;IAElF,MAAM,CAACQ,UAAUC,YAAY,GAAG3B,qBAAsC;QACpE4B,cAAc,IAAIhB;QAClBiB,cAAc9B,MAAM+B,OAAO,CACzB,IAAMP,wBAAwBQ,sBAAsBR,uBACpD;YAACA;SAAqB;QAExBS,OAAOjC,MAAM+B,OAAO,CAAC,IAAMN,iBAAiBO,sBAAsBP,gBAAgB;YAACA;SAAc;IACnG;IAEA,MAAMS,mBAAmBlC,MAAM+B,OAAO,CAAC,IAAM;QAC3C,OAAO5B,uBAAuBc,eAAe,CAACkB,GAAGC,mBAAqB;YACpER,YAAY,IAAM;gBAChBF,8BAAAA,+BAAAA,KAAAA,IAAAA,kBAAoBS,GAA2B;oBAAEV,eAAeW;gBAAiB;gBACjF,OAAOA;YACT;QACF;IACF,GAAG;QAACV;QAAmBT;QAAeW;KAAY;IAElD,MAAMb,gBAAsDb,iBAAiBiC,CAAAA,IAAK;YAGvDZ;QAFzBW,iBAAiBG,cAAc,CAC7BF,GACAb,MAAMgB,GAAG,CAAC,CAACC,MAAMC;YAAMjB,OAAAA,CAAAA,YAAAA,qBAAAA,sBAAAA,KAAAA,IAAAA,SAAWgB,mBAAXhB,uBAAAA,YAAoBiB,CAAC;YAC5Cb;IAEJ;IAEA,MAAMX,YAA8Cd,iBAAiB,CAACiC,GAAGM,QACvEP,iBAAiBQ,UAAU,CAACP,GAAGM,OAAOd;IAGxC,MAAMlB,cAAkDP,iBAAiB,CAACiC,GAAGM,QAC3EP,iBAAiBS,YAAY,CAACR,GAAGM,OAAOd;IAG1C,MAAMhB,YAA8CT,iBAAiB,CAACiC,GAAGM,QACvEP,iBAAiBU,UAAU,CAACT,GAAGM,OAAOd;IAGxC,MAAMjB,gBAAsD,CAAC+B,QAC3DP,iBAAiBW,UAAU,CAACJ,OAAOd;IAErC,OAAO;QACL,GAAGP,UAAU;QACb0B,WAAW;YACT7B;YACAH,kBAAkBa,SAASoB,IAAI,GAAG;YAClCxC,iBAAiBU,kBAAkB,WAAWU,SAASoB,IAAI,GAAG,IAAIpB,SAASoB,IAAI,KAAKzB,MAAM0B,MAAM;YAChGpC,cAAce;YACdX;YACAD;YACAP,WAAW0B,iBAAiBe,UAAU;YACtCxC;YACAE;YACAD;QACF;IACF;AACF,CAAC;AAED;;CAEC,GACD,SAASsB,sBAAyBkB,QAAqB,EAAU;IAC/D,OAAOA,oBAAoBrC,MAAMqC,WAAW,IAAIrC,IAAIqC,SAAS;AAC/D"}