"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useTreeItemLayout_unstable", {
    enumerable: true,
    get: ()=>useTreeItemLayout_unstable
});
const _interopRequireWildcard = require("@swc/helpers/lib/_interop_require_wildcard.js").default;
const _react = /*#__PURE__*/ _interopRequireWildcard(require("react"));
const _reactUtilities = require("@fluentui/react-utilities");
const _treeItemContext = require("../../contexts/treeItemContext");
const _treeItemChevron = require("../TreeItemChevron");
const useTreeItemLayout_unstable = (props, ref)=>{
    const { iconAfter , iconBefore , expandIcon , as ='span'  } = props;
    const layoutRef = (0, _treeItemContext.useTreeItemContext_unstable)((ctx)=>ctx.layoutRef);
    const expandIconRef = (0, _treeItemContext.useTreeItemContext_unstable)((ctx)=>ctx.expandIconRef);
    const isBranch = (0, _treeItemContext.useTreeItemContext_unstable)((ctx)=>ctx.itemType === 'branch');
    return {
        components: {
            root: 'div',
            expandIcon: 'div',
            iconBefore: 'div',
            iconAfter: 'div'
        },
        root: (0, _reactUtilities.getNativeElementProps)(as, {
            ...props,
            ref: (0, _reactUtilities.useMergedRefs)(ref, layoutRef)
        }),
        iconBefore: (0, _reactUtilities.resolveShorthand)(iconBefore, {
            defaultProps: {
                'aria-hidden': true
            }
        }),
        iconAfter: (0, _reactUtilities.resolveShorthand)(iconAfter, {
            defaultProps: {
                'aria-hidden': true
            }
        }),
        expandIcon: (0, _reactUtilities.resolveShorthand)(expandIcon, {
            required: isBranch,
            defaultProps: {
                children: /*#__PURE__*/ _react.createElement(_treeItemChevron.TreeItemChevron, null),
                'aria-hidden': true,
                ref: (0, _reactUtilities.useMergedRefs)((0, _reactUtilities.isResolvedShorthand)(expandIcon) ? expandIcon.ref : undefined, expandIconRef)
            }
        })
    };
};
