{"version":3,"sources":["createFlatTreeItems.ts"],"sourcesContent":["import type { ImmutableSet } from './ImmutableSet';\nimport type { FlatTreeItem, FlatTreeItemProps } from '../hooks/useFlatTree';\nimport * as React from 'react';\n\n/**\n * @internal\n */\nexport type FlatTreeItems<Props extends FlatTreeItemProps<unknown>> = {\n  size: number;\n  root: FlatTreeItem;\n  get(key: Props['value']): FlatTreeItem<Props> | undefined;\n  set(key: Props['value'], value: FlatTreeItem<Props>): void;\n  getByIndex(index: number): FlatTreeItem<Props>;\n};\n\n/**\n * creates a list of flat tree items\n * and provides a map to access each item by id\n */\nexport function createFlatTreeItems<Props extends FlatTreeItemProps<unknown>>(\n  flatTreeItemProps: Props[],\n): FlatTreeItems<Props> {\n  const root = createFlatTreeRootItem();\n  const itemsPerValue = new Map<unknown, FlatTreeItem<FlatTreeItemProps<unknown>>>([[root.value, root]]);\n  const items: FlatTreeItem<FlatTreeItemProps<unknown>>[] = [];\n\n  for (let index = 0; index < flatTreeItemProps.length; index++) {\n    const { parentValue = flatTreeRootId, ...treeItemProps } = flatTreeItemProps[index];\n\n    const nextItemProps: Props | undefined = flatTreeItemProps[index + 1];\n    const currentParent = itemsPerValue.get(parentValue);\n    if (!currentParent) {\n      if (process.env.NODE_ENV === 'development') {\n        // eslint-disable-next-line no-console\n        console.error(\n          `useFlatTree: item ${flatTreeItemProps[index].id} is wrongly positioned, did you properly ordered provided item props? make sure provided items are organized`,\n        );\n      }\n      break;\n    }\n    const itemType =\n      treeItemProps.itemType ??\n      (treeItemProps.value === undefined || nextItemProps?.parentValue !== treeItemProps.value ? 'leaf' : 'branch');\n    const currentLevel = (currentParent.level ?? 0) + 1;\n    const currentChildrenSize = ++currentParent.childrenSize;\n    const ref = React.createRef<HTMLDivElement>();\n\n    const flatTreeItem: FlatTreeItem<FlatTreeItemProps<unknown>> = {\n      value: treeItemProps.value,\n      getTreeItemProps: () => ({\n        ...treeItemProps,\n        'aria-level': currentLevel,\n        'aria-posinset': currentChildrenSize,\n        'aria-setsize': currentParent.childrenSize,\n        itemType,\n        // a reference to every parent element is necessary to ensure navigation\n        ref: flatTreeItem.childrenSize > 0 ? ref : undefined,\n      }),\n      ref,\n      level: currentLevel,\n      parentValue,\n      childrenSize: 0,\n      index: -1,\n    };\n    itemsPerValue.set(flatTreeItem.value, flatTreeItem);\n    items.push(flatTreeItem);\n  }\n\n  const flatTreeItems: FlatTreeItems<FlatTreeItemProps<unknown>> = {\n    root,\n    size: items.length,\n    getByIndex: index => items[index],\n    get: key => itemsPerValue.get(key),\n    set: (key, value) => itemsPerValue.set(key, value),\n  };\n\n  return flatTreeItems as FlatTreeItems<Props>;\n}\n\nexport const flatTreeRootId = '__fuiFlatTreeRoot';\n\nfunction createFlatTreeRootItem(): FlatTreeItem {\n  return {\n    ref: { current: null },\n    value: flatTreeRootId,\n    parentValue: undefined,\n    getTreeItemProps: () => {\n      if (process.env.NODE_ENV !== 'production') {\n        // eslint-disable-next-line no-console\n        console.error('useFlatTree: internal error, trying to access treeitem props from invalid root element');\n      }\n      return { value: flatTreeRootId, 'aria-setsize': -1, 'aria-level': -1, 'aria-posinset': -1, itemType: 'branch' };\n    },\n    childrenSize: 0,\n    get index() {\n      if (process.env.NODE_ENV !== 'production') {\n        // eslint-disable-next-line no-console\n        console.error('useFlatTree: internal error, trying to access treeitem props from invalid root element');\n      }\n      return -1;\n    },\n    level: 0,\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function* VisibleFlatTreeItemGenerator<Props extends FlatTreeItemProps<unknown>>(\n  openItems: ImmutableSet<unknown>,\n  flatTreeItems: FlatTreeItems<Props>,\n) {\n  for (let index = 0, visibleIndex = 0; index < flatTreeItems.size; index++) {\n    const item = flatTreeItems.getByIndex(index) as FlatTreeItem<Props>;\n    if (isItemVisible(item, openItems, flatTreeItems)) {\n      item.index = visibleIndex++;\n      yield item;\n    } else {\n      // Jump the amount of children the current item has, since those items will also be hidden\n      index += item.childrenSize;\n    }\n  }\n}\n\nfunction isItemVisible(\n  item: FlatTreeItem<FlatTreeItemProps<unknown>>,\n  openItems: ImmutableSet<unknown>,\n  flatTreeItems: FlatTreeItems<FlatTreeItemProps<unknown>>,\n) {\n  if (item.level === 1) {\n    return true;\n  }\n  while (item.parentValue && item.parentValue !== flatTreeItems.root.value) {\n    if (!openItems.has(item.parentValue)) {\n      return false;\n    }\n    const parent = flatTreeItems.get(item.parentValue);\n    if (!parent) {\n      return false;\n    }\n    item = parent;\n  }\n  return true;\n}\n"],"names":["React","createFlatTreeItems","flatTreeItemProps","root","createFlatTreeRootItem","itemsPerValue","Map","value","items","index","length","parentValue","flatTreeRootId","treeItemProps","nextItemProps","currentParent","get","process","env","NODE_ENV","console","error","id","itemType","undefined","currentLevel","level","currentChildrenSize","childrenSize","ref","createRef","flatTreeItem","getTreeItemProps","set","push","flatTreeItems","size","getByIndex","key","current","VisibleFlatTreeItemGenerator","openItems","visibleIndex","item","isItemVisible","has","parent"],"mappings":"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"}