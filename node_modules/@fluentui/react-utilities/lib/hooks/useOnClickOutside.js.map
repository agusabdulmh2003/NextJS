{"version":3,"sources":["useOnClickOutside.ts"],"sourcesContent":["import * as React from 'react';\nimport { useEventCallback } from './useEventCallback';\n\n/**\n * @internal\n */\nexport type UseOnClickOrScrollOutsideOptions = {\n  /**\n   * The element to listen for the click event\n   */\n  element: Document | undefined;\n  /**\n   * Refs to elements that check if the click is outside\n   */\n  refs: React.MutableRefObject<HTMLElement | undefined | null>[];\n\n  /**\n   * By default uses element.contains, but custom contain function can be provided\n   *\n   * @param parent - provided parent element\n   * @param child - event target element\n   */\n  contains?(parent: HTMLElement | null, child: HTMLElement): boolean;\n\n  /**\n   * Disables event listeners\n   */\n  disabled?: boolean;\n\n  /**\n   * Called if the click is outside the element refs\n   */\n  callback: (ev: MouseEvent | TouchEvent) => void;\n};\n\n/**\n * @internal\n * Utility to perform checks where a click/touch event was made outside a component\n */\nexport const useOnClickOutside = (options: UseOnClickOrScrollOutsideOptions) => {\n  const { refs, callback, element, disabled, contains: containsProp } = options;\n  const timeoutId = React.useRef<number | undefined>(undefined);\n  useIFrameFocus(options);\n\n  const listener = useEventCallback((ev: MouseEvent | TouchEvent) => {\n    const contains: UseOnClickOrScrollOutsideOptions['contains'] =\n      containsProp || ((parent, child) => !!parent?.contains(child));\n\n    const isOutside = refs.every(ref => !contains(ref.current || null, ev.target as HTMLElement));\n    if (isOutside && !disabled) {\n      callback(ev);\n    }\n  });\n\n  React.useEffect(() => {\n    if (disabled) {\n      return;\n    }\n\n    // Store the current event to avoid triggering handlers immediately\n    // Note this depends on a deprecated but extremely well supported quirk of the web platform\n    // https://github.com/facebook/react/issues/20074\n    let currentEvent = getWindowEvent(window);\n\n    const conditionalHandler = (event: MouseEvent | TouchEvent) => {\n      // Skip if this event is the same as the one running when we added the handlers\n      if (event === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n\n      listener(event);\n    };\n\n    // use capture phase because React can update DOM before the event bubbles to the document\n    element?.addEventListener('click', conditionalHandler, true);\n    element?.addEventListener('touchstart', conditionalHandler, true);\n    element?.addEventListener('contextmenu', conditionalHandler, true);\n\n    // Garbage collect this event after it's no longer useful to avoid memory leaks\n    timeoutId.current = window.setTimeout(() => {\n      currentEvent = undefined;\n    }, 1);\n\n    return () => {\n      element?.removeEventListener('click', conditionalHandler, true);\n      element?.removeEventListener('touchstart', conditionalHandler, true);\n      element?.removeEventListener('contextmenu', conditionalHandler, true);\n\n      clearTimeout(timeoutId.current);\n      currentEvent = undefined;\n    };\n  }, [listener, element, disabled]);\n};\n\nconst getWindowEvent = (target: Node | Window): Event | undefined => {\n  if (target) {\n    if (typeof (target as Window).window === 'object' && (target as Window).window === target) {\n      // eslint-disable-next-line deprecation/deprecation\n      return target.event;\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    return (target as Node).ownerDocument?.defaultView?.event ?? undefined;\n  }\n\n  return undefined;\n};\n\nconst FUI_FRAME_EVENT = 'fuiframefocus';\n\ninterface UseIFrameFocusOptions extends UseOnClickOrScrollOutsideOptions {\n  /**\n   * Millisecond duration to poll\n   */\n  pollDuration?: number;\n}\n\n/**\n * Since click events do not propagate past iframes, we use focus to detect if a\n * click has happened inside an iframe, since the only ways of focusing inside an\n * iframe are:\n *   - clicking inside\n *   - tabbing inside\n *\n * Polls the value of `document.activeElement`. If it is an iframe, then dispatch\n * a custom DOM event. When the custom event is received call the provided callback\n */\nconst useIFrameFocus = (options: UseIFrameFocusOptions) => {\n  const {\n    disabled,\n    element: targetDocument,\n    callback,\n    contains: containsProp = (parent, child) => !!parent?.contains(child),\n    pollDuration = 1000,\n    refs,\n  } = options;\n  const timeoutRef = React.useRef<number>();\n\n  const listener = useEventCallback((e: Event) => {\n    const contains = containsProp || ((parent, child) => !!parent?.contains(child));\n\n    const isOutside = refs.every(ref => !contains(ref.current || null, e.target as HTMLElement));\n    if (isOutside && !disabled) {\n      callback(e as MouseEvent);\n    }\n  });\n\n  // Adds listener to the custom iframe focus event\n  React.useEffect(() => {\n    if (disabled) {\n      return;\n    }\n\n    targetDocument?.addEventListener(FUI_FRAME_EVENT, listener, true);\n\n    return () => {\n      targetDocument?.removeEventListener(FUI_FRAME_EVENT, listener, true);\n    };\n  }, [targetDocument, disabled, listener]);\n\n  // Starts polling for the active element\n  React.useEffect(() => {\n    if (disabled) {\n      return;\n    }\n\n    timeoutRef.current = targetDocument?.defaultView?.setInterval(() => {\n      const activeElement = targetDocument?.activeElement;\n\n      if (activeElement?.tagName === 'IFRAME' || activeElement?.tagName === 'WEBVIEW') {\n        const event = new CustomEvent(FUI_FRAME_EVENT, { bubbles: true });\n        activeElement.dispatchEvent(event);\n      }\n    }, pollDuration);\n\n    return () => {\n      targetDocument?.defaultView?.clearTimeout(timeoutRef.current);\n    };\n  }, [targetDocument, disabled, pollDuration]);\n};\n"],"names":["React","useEventCallback","useOnClickOutside","options","refs","callback","element","disabled","contains","containsProp","timeoutId","useRef","undefined","useIFrameFocus","listener","ev","parent","child","isOutside","every","ref","current","target","useEffect","currentEvent","getWindowEvent","window","conditionalHandler","event","addEventListener","setTimeout","removeEventListener","clearTimeout","ownerDocument","defaultView","FUI_FRAME_EVENT","targetDocument","pollDuration","timeoutRef","e","setInterval","activeElement","tagName","CustomEvent","bubbles","dispatchEvent"],"mappings":"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"}