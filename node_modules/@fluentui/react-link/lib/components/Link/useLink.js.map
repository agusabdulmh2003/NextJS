{"version":3,"sources":["useLink.ts"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps } from '@fluentui/react-utilities';\nimport { useLinkState_unstable } from './useLinkState';\nimport type { LinkProps, LinkState } from './Link.types';\n\n/**\n * Given user props, defines default props for the Link, calls useLinkState_unstable, and returns processed state.\n * @param props - User provided props to the Link component.\n * @param ref - User provided ref to be passed to the Link component.\n */\nexport const useLink_unstable = (\n  props: LinkProps,\n  ref: React.Ref<HTMLAnchorElement | HTMLButtonElement>,\n): LinkState => {\n  const { appearance = 'default', disabled = false, disabledFocusable = false, inline = false } = props;\n  const as = props.as || (props.href ? 'a' : 'button');\n  const type = as === 'button' ? 'button' : undefined;\n\n  const state: LinkState = {\n    // Props passed at the top-level\n    appearance,\n    disabled,\n    disabledFocusable,\n    inline,\n\n    // Slots definition\n    components: {\n      root: 'a',\n    },\n\n    root: getNativeElementProps(as, {\n      ref,\n      type,\n      ...props,\n      as,\n    }),\n  };\n\n  useLinkState_unstable(state);\n\n  return state;\n};\n"],"names":["React","getNativeElementProps","useLinkState_unstable","useLink_unstable","props","ref","appearance","disabled","disabledFocusable","inline","as","href","type","undefined","state","components","root"],"mappings":"AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,qBAAqB,QAAQ,4BAA4B;AAClE,SAASC,qBAAqB,QAAQ,iBAAiB;AAGvD;;;;CAIC,GACD,OAAO,MAAMC,mBAAmB,CAC9BC,OACAC,MACc;IACd,MAAM,EAAEC,YAAa,UAAS,EAAEC,UAAW,KAAK,CAAA,EAAEC,mBAAoB,KAAK,CAAA,EAAEC,QAAS,KAAK,CAAA,EAAE,GAAGL;IAChG,MAAMM,KAAKN,MAAMM,EAAE,IAAKN,CAAAA,MAAMO,IAAI,GAAG,MAAM,QAAQ,AAAD;IAClD,MAAMC,OAAOF,OAAO,WAAW,WAAWG,SAAS;IAEnD,MAAMC,QAAmB;QACvB,gCAAgC;QAChCR;QACAC;QACAC;QACAC;QAEA,mBAAmB;QACnBM,YAAY;YACVC,MAAM;QACR;QAEAA,MAAMf,sBAAsBS,IAAI;YAC9BL;YACAO;YACA,GAAGR,KAAK;YACRM;QACF;IACF;IAEAR,sBAAsBY;IAEtB,OAAOA;AACT,EAAE"}